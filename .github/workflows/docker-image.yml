name: Build & Push Docker image

on:
  push:
    branches: [main] # run on every push to main
  pull_request: # …and on every PR (build only, no push)

jobs:
  # -------------------------------------------------------
  # 1) Build job — build & (on main) push the Docker image
  # -------------------------------------------------------
  build:
    runs-on: ubuntu-latest
    outputs: # ← expose the tag to other jobs
      image: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Extract image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/chrome-extension-backend
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha

      - name: Build (push only on main)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # -------------------------------------------------------
  # 2) Deploy job — only runs on main after build succeeds
  # -------------------------------------------------------
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: superfly/flyctl-actions/setup-flyctl@v1

      - name: Fly deploy
        run: flyctl deploy --remote-only \
          --app chrome-extension-backend-winter-rain-1308 \
          --image "${{ secrets.DOCKERHUB_USERNAME }}/chrome-extension-backend:latest"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
